# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simple_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='simple_service.proto',
  package='grpc',
  syntax='proto3',
  serialized_pb=_b('\n\x14simple_service.proto\x12\x04grpc\x1a\x1bgoogle/protobuf/empty.proto\"0\n\x0b\x45\x63hoRequest\x12\x0c\n\x04\x65\x63ho\x18\x01 \x01(\t\x12\x13\n\x0brepeat_echo\x18\x02 \x01(\x05\"%\n\x0c\x45\x63hoResponse\x12\x15\n\recho_response\x18\x01 \x01(\t\"l\n\'FailWithProbabilityOrSucceedEchoRequest\x12\'\n\x0c\x65\x63ho_request\x18\x01 \x01(\x0b\x32\x11.grpc.EchoRequest\x12\x18\n\x10\x66\x61il_probability\x18\x02 \x01(\x05\"\'\n\x15\x42lockForMillisRequest\x12\x0e\n\x06millis\x18\x01 \x01(\x05\"E\n\x17\x44oNEmptyRequestsRequest\x12\x19\n\x11num_empty_request\x18\x01 \x01(\x05\x12\x0f\n\x07p_level\x18\x02 \x01(\x05\"\x85\x01\n\x18\x44oNEmptyRequestsResponse\x12\x1a\n\x12total_process_time\x18\x01 \x01(\x03\x12\x1b\n\x13successful_requests\x18\x02 \x01(\x05\x12\x17\n\x0f\x66\x61iled_requests\x18\x03 \x01(\x05\x12\x17\n\x0flongest_request\x18\x04 \x01(\x03\"\xdd\x01\n!DoNEchoRequestsAndFailSomeRequest\x12\x35\n\x0e\x65mpty_requests\x18\x01 \x01(\x0b\x32\x1d.grpc.DoNEmptyRequestsRequest\x12\x35\n\x10\x62lock_for_millis\x18\x02 \x01(\x0b\x32\x1b.grpc.BlockForMillisRequest\x12J\n\x13\x65\x63ho_with_p_failure\x18\x03 \x01(\x0b\x32-.grpc.FailWithProbabilityOrSucceedEchoRequest2\xc6\x01\n\x06Simple\x12\x38\n\x04Noop\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12/\n\x04\x45\x63ho\x12\x11.grpc.EchoRequest\x1a\x12.grpc.EchoResponse\"\x00\x12Q\n\nFailPlease\x12-.grpc.FailWithProbabilityOrSucceedEchoRequest\x1a\x12.grpc.EchoResponse\"\x00\x32\x8f\x02\n\nLessSimple\x12G\n\x0e\x42lockForMillis\x12\x1b.grpc.BlockForMillisRequest\x1a\x16.google.protobuf.Empty\"\x00\x12S\n\x10\x44oNEmptyRequests\x12\x1d.grpc.DoNEmptyRequestsRequest\x1a\x1e.grpc.DoNEmptyRequestsResponse\"\x00\x12\x63\n\x16\x44oNRequestsAndFailSome\x12\'.grpc.DoNEchoRequestsAndFailSomeRequest\x1a\x1e.grpc.DoNEmptyRequestsResponse\"\x00\x42\x12\n\x10my.service.protob\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='grpc.EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='echo', full_name='grpc.EchoRequest.echo', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeat_echo', full_name='grpc.EchoRequest.repeat_echo', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=107,
)


_ECHORESPONSE = _descriptor.Descriptor(
  name='EchoResponse',
  full_name='grpc.EchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='echo_response', full_name='grpc.EchoResponse.echo_response', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=146,
)


_FAILWITHPROBABILITYORSUCCEEDECHOREQUEST = _descriptor.Descriptor(
  name='FailWithProbabilityOrSucceedEchoRequest',
  full_name='grpc.FailWithProbabilityOrSucceedEchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='echo_request', full_name='grpc.FailWithProbabilityOrSucceedEchoRequest.echo_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fail_probability', full_name='grpc.FailWithProbabilityOrSucceedEchoRequest.fail_probability', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=256,
)


_BLOCKFORMILLISREQUEST = _descriptor.Descriptor(
  name='BlockForMillisRequest',
  full_name='grpc.BlockForMillisRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='millis', full_name='grpc.BlockForMillisRequest.millis', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=297,
)


_DONEMPTYREQUESTSREQUEST = _descriptor.Descriptor(
  name='DoNEmptyRequestsRequest',
  full_name='grpc.DoNEmptyRequestsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_empty_request', full_name='grpc.DoNEmptyRequestsRequest.num_empty_request', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='p_level', full_name='grpc.DoNEmptyRequestsRequest.p_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=299,
  serialized_end=368,
)


_DONEMPTYREQUESTSRESPONSE = _descriptor.Descriptor(
  name='DoNEmptyRequestsResponse',
  full_name='grpc.DoNEmptyRequestsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='total_process_time', full_name='grpc.DoNEmptyRequestsResponse.total_process_time', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='successful_requests', full_name='grpc.DoNEmptyRequestsResponse.successful_requests', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='failed_requests', full_name='grpc.DoNEmptyRequestsResponse.failed_requests', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='longest_request', full_name='grpc.DoNEmptyRequestsResponse.longest_request', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=371,
  serialized_end=504,
)


_DONECHOREQUESTSANDFAILSOMEREQUEST = _descriptor.Descriptor(
  name='DoNEchoRequestsAndFailSomeRequest',
  full_name='grpc.DoNEchoRequestsAndFailSomeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='empty_requests', full_name='grpc.DoNEchoRequestsAndFailSomeRequest.empty_requests', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block_for_millis', full_name='grpc.DoNEchoRequestsAndFailSomeRequest.block_for_millis', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='echo_with_p_failure', full_name='grpc.DoNEchoRequestsAndFailSomeRequest.echo_with_p_failure', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=507,
  serialized_end=728,
)

_FAILWITHPROBABILITYORSUCCEEDECHOREQUEST.fields_by_name['echo_request'].message_type = _ECHOREQUEST
_DONECHOREQUESTSANDFAILSOMEREQUEST.fields_by_name['empty_requests'].message_type = _DONEMPTYREQUESTSREQUEST
_DONECHOREQUESTSANDFAILSOMEREQUEST.fields_by_name['block_for_millis'].message_type = _BLOCKFORMILLISREQUEST
_DONECHOREQUESTSANDFAILSOMEREQUEST.fields_by_name['echo_with_p_failure'].message_type = _FAILWITHPROBABILITYORSUCCEEDECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoResponse'] = _ECHORESPONSE
DESCRIPTOR.message_types_by_name['FailWithProbabilityOrSucceedEchoRequest'] = _FAILWITHPROBABILITYORSUCCEEDECHOREQUEST
DESCRIPTOR.message_types_by_name['BlockForMillisRequest'] = _BLOCKFORMILLISREQUEST
DESCRIPTOR.message_types_by_name['DoNEmptyRequestsRequest'] = _DONEMPTYREQUESTSREQUEST
DESCRIPTOR.message_types_by_name['DoNEmptyRequestsResponse'] = _DONEMPTYREQUESTSRESPONSE
DESCRIPTOR.message_types_by_name['DoNEchoRequestsAndFailSomeRequest'] = _DONECHOREQUESTSANDFAILSOMEREQUEST

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _ECHOREQUEST,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.EchoRequest)
  ))
_sym_db.RegisterMessage(EchoRequest)

EchoResponse = _reflection.GeneratedProtocolMessageType('EchoResponse', (_message.Message,), dict(
  DESCRIPTOR = _ECHORESPONSE,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.EchoResponse)
  ))
_sym_db.RegisterMessage(EchoResponse)

FailWithProbabilityOrSucceedEchoRequest = _reflection.GeneratedProtocolMessageType('FailWithProbabilityOrSucceedEchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _FAILWITHPROBABILITYORSUCCEEDECHOREQUEST,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.FailWithProbabilityOrSucceedEchoRequest)
  ))
_sym_db.RegisterMessage(FailWithProbabilityOrSucceedEchoRequest)

BlockForMillisRequest = _reflection.GeneratedProtocolMessageType('BlockForMillisRequest', (_message.Message,), dict(
  DESCRIPTOR = _BLOCKFORMILLISREQUEST,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.BlockForMillisRequest)
  ))
_sym_db.RegisterMessage(BlockForMillisRequest)

DoNEmptyRequestsRequest = _reflection.GeneratedProtocolMessageType('DoNEmptyRequestsRequest', (_message.Message,), dict(
  DESCRIPTOR = _DONEMPTYREQUESTSREQUEST,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.DoNEmptyRequestsRequest)
  ))
_sym_db.RegisterMessage(DoNEmptyRequestsRequest)

DoNEmptyRequestsResponse = _reflection.GeneratedProtocolMessageType('DoNEmptyRequestsResponse', (_message.Message,), dict(
  DESCRIPTOR = _DONEMPTYREQUESTSRESPONSE,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.DoNEmptyRequestsResponse)
  ))
_sym_db.RegisterMessage(DoNEmptyRequestsResponse)

DoNEchoRequestsAndFailSomeRequest = _reflection.GeneratedProtocolMessageType('DoNEchoRequestsAndFailSomeRequest', (_message.Message,), dict(
  DESCRIPTOR = _DONECHOREQUESTSANDFAILSOMEREQUEST,
  __module__ = 'simple_service_pb2'
  # @@protoc_insertion_point(class_scope:grpc.DoNEchoRequestsAndFailSomeRequest)
  ))
_sym_db.RegisterMessage(DoNEchoRequestsAndFailSomeRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020my.service.proto'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class SimpleStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Noop = channel.unary_unary(
          '/grpc.Simple/Noop',
          request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.Echo = channel.unary_unary(
          '/grpc.Simple/Echo',
          request_serializer=EchoRequest.SerializeToString,
          response_deserializer=EchoResponse.FromString,
          )
      self.FailPlease = channel.unary_unary(
          '/grpc.Simple/FailPlease',
          request_serializer=FailWithProbabilityOrSucceedEchoRequest.SerializeToString,
          response_deserializer=EchoResponse.FromString,
          )


  class SimpleServicer(object):

    def Noop(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Echo(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FailPlease(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SimpleServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Noop': grpc.unary_unary_rpc_method_handler(
            servicer.Noop,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'Echo': grpc.unary_unary_rpc_method_handler(
            servicer.Echo,
            request_deserializer=EchoRequest.FromString,
            response_serializer=EchoResponse.SerializeToString,
        ),
        'FailPlease': grpc.unary_unary_rpc_method_handler(
            servicer.FailPlease,
            request_deserializer=FailWithProbabilityOrSucceedEchoRequest.FromString,
            response_serializer=EchoResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'grpc.Simple', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class LessSimpleStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.BlockForMillis = channel.unary_unary(
          '/grpc.LessSimple/BlockForMillis',
          request_serializer=BlockForMillisRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.DoNEmptyRequests = channel.unary_unary(
          '/grpc.LessSimple/DoNEmptyRequests',
          request_serializer=DoNEmptyRequestsRequest.SerializeToString,
          response_deserializer=DoNEmptyRequestsResponse.FromString,
          )
      self.DoNRequestsAndFailSome = channel.unary_unary(
          '/grpc.LessSimple/DoNRequestsAndFailSome',
          request_serializer=DoNEchoRequestsAndFailSomeRequest.SerializeToString,
          response_deserializer=DoNEmptyRequestsResponse.FromString,
          )


  class LessSimpleServicer(object):

    def BlockForMillis(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DoNEmptyRequests(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DoNRequestsAndFailSome(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LessSimpleServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'BlockForMillis': grpc.unary_unary_rpc_method_handler(
            servicer.BlockForMillis,
            request_deserializer=BlockForMillisRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'DoNEmptyRequests': grpc.unary_unary_rpc_method_handler(
            servicer.DoNEmptyRequests,
            request_deserializer=DoNEmptyRequestsRequest.FromString,
            response_serializer=DoNEmptyRequestsResponse.SerializeToString,
        ),
        'DoNRequestsAndFailSome': grpc.unary_unary_rpc_method_handler(
            servicer.DoNRequestsAndFailSome,
            request_deserializer=DoNEchoRequestsAndFailSomeRequest.FromString,
            response_serializer=DoNEmptyRequestsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'grpc.LessSimple', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSimpleServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Noop(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Echo(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FailPlease(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSimpleStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Noop(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Noop.future = None
    def Echo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Echo.future = None
    def FailPlease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    FailPlease.future = None


  def beta_create_Simple_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('grpc.Simple', 'Echo'): EchoRequest.FromString,
      ('grpc.Simple', 'FailPlease'): FailWithProbabilityOrSucceedEchoRequest.FromString,
      ('grpc.Simple', 'Noop'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    }
    response_serializers = {
      ('grpc.Simple', 'Echo'): EchoResponse.SerializeToString,
      ('grpc.Simple', 'FailPlease'): EchoResponse.SerializeToString,
      ('grpc.Simple', 'Noop'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    }
    method_implementations = {
      ('grpc.Simple', 'Echo'): face_utilities.unary_unary_inline(servicer.Echo),
      ('grpc.Simple', 'FailPlease'): face_utilities.unary_unary_inline(servicer.FailPlease),
      ('grpc.Simple', 'Noop'): face_utilities.unary_unary_inline(servicer.Noop),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Simple_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('grpc.Simple', 'Echo'): EchoRequest.SerializeToString,
      ('grpc.Simple', 'FailPlease'): FailWithProbabilityOrSucceedEchoRequest.SerializeToString,
      ('grpc.Simple', 'Noop'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
    }
    response_deserializers = {
      ('grpc.Simple', 'Echo'): EchoResponse.FromString,
      ('grpc.Simple', 'FailPlease'): EchoResponse.FromString,
      ('grpc.Simple', 'Noop'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
    }
    cardinalities = {
      'Echo': cardinality.Cardinality.UNARY_UNARY,
      'FailPlease': cardinality.Cardinality.UNARY_UNARY,
      'Noop': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'grpc.Simple', cardinalities, options=stub_options)


  class BetaLessSimpleServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def BlockForMillis(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DoNEmptyRequests(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DoNRequestsAndFailSome(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLessSimpleStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def BlockForMillis(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    BlockForMillis.future = None
    def DoNEmptyRequests(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DoNEmptyRequests.future = None
    def DoNRequestsAndFailSome(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DoNRequestsAndFailSome.future = None


  def beta_create_LessSimple_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('grpc.LessSimple', 'BlockForMillis'): BlockForMillisRequest.FromString,
      ('grpc.LessSimple', 'DoNEmptyRequests'): DoNEmptyRequestsRequest.FromString,
      ('grpc.LessSimple', 'DoNRequestsAndFailSome'): DoNEchoRequestsAndFailSomeRequest.FromString,
    }
    response_serializers = {
      ('grpc.LessSimple', 'BlockForMillis'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('grpc.LessSimple', 'DoNEmptyRequests'): DoNEmptyRequestsResponse.SerializeToString,
      ('grpc.LessSimple', 'DoNRequestsAndFailSome'): DoNEmptyRequestsResponse.SerializeToString,
    }
    method_implementations = {
      ('grpc.LessSimple', 'BlockForMillis'): face_utilities.unary_unary_inline(servicer.BlockForMillis),
      ('grpc.LessSimple', 'DoNEmptyRequests'): face_utilities.unary_unary_inline(servicer.DoNEmptyRequests),
      ('grpc.LessSimple', 'DoNRequestsAndFailSome'): face_utilities.unary_unary_inline(servicer.DoNRequestsAndFailSome),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_LessSimple_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('grpc.LessSimple', 'BlockForMillis'): BlockForMillisRequest.SerializeToString,
      ('grpc.LessSimple', 'DoNEmptyRequests'): DoNEmptyRequestsRequest.SerializeToString,
      ('grpc.LessSimple', 'DoNRequestsAndFailSome'): DoNEchoRequestsAndFailSomeRequest.SerializeToString,
    }
    response_deserializers = {
      ('grpc.LessSimple', 'BlockForMillis'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('grpc.LessSimple', 'DoNEmptyRequests'): DoNEmptyRequestsResponse.FromString,
      ('grpc.LessSimple', 'DoNRequestsAndFailSome'): DoNEmptyRequestsResponse.FromString,
    }
    cardinalities = {
      'BlockForMillis': cardinality.Cardinality.UNARY_UNARY,
      'DoNEmptyRequests': cardinality.Cardinality.UNARY_UNARY,
      'DoNRequestsAndFailSome': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'grpc.LessSimple', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
